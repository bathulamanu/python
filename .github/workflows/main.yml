name: CI/CD Python Apps to ECR & EKS

on:
  push:
    branches:
      - main
    paths:
      - 'python-1/**'
      - 'python-2/**'
      - 'python-3/**'
      - 'python-4/**'
      - '*.yaml'   # Trigger if any deployment YAML changes
  workflow_dispatch:

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build & push Docker images
        run: |
          for app in python-1 python-2 python-3 python-4; do
            echo "üöÄ Building Docker image for $app"
            docker build -t $app ./$app
            docker tag $app:latest ${{ secrets.ECR_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/$app:latest
            docker push ${{ secrets.ECR_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/$app:latest
          done

      - name: Setup kubectl
        run: |
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > kubeconfig
          export KUBECONFIG=$PWD/kubeconfig
          kubectl cluster-info
          kubectl get nodes

      - name: Deploy/update to EKS
        run: |
          export KUBECONFIG=$PWD/kubeconfig

          # Apply all deployment YAMLs
          for file in python-1-deployment.yaml python-2-deployment.yaml python-3-deployment.yaml python-4-deployment.yaml; do
            if [ -f $file ]; then
              echo "Applying $file"
              kubectl apply -f $file
            else
              echo "‚ö†Ô∏è WARNING: $file not found"
            fi
          done

          # Update deployments with latest image
          for app in python-1 python-2 python-3 python-4; do
            echo "üîÑ Updating image for $app"
            kubectl set image deployment/$app \
              $app=${{ secrets.ECR_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/$app:latest --record || true
          done

          # Restart pods to ensure new image is pulled
          for app in python-1 python-2 python-3 python-4; do
            kubectl rollout restart deployment/$app
          done
