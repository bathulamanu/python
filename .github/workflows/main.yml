name: CI/CD Python Apps to ECR & EKS

on:
  push:
    branches:
      - main
    paths:
      - 'python-1/**'
      - 'python-2/**'
      - 'python-3/**'
      - 'python-4/**'
  workflow_dispatch:


jobs:
  build-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [python-1, python-2, python-3, python-4]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Debug - verify secrets
        run: |
          echo "AWS_REGION=${{ secrets.AWS_REGION }}"
          echo "ECR_ACCOUNT_ID=${{ secrets.ECR_ACCOUNT_ID }}"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build & push Docker image
        run: |
          echo "Building Docker image for ${{ matrix.app }}"
          docker build -t ${{ matrix.app }} ./${{ matrix.app }}
          docker tag ${{ matrix.app }}:latest ${{ secrets.ECR_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ matrix.app }}:latest
          docker push ${{ secrets.ECR_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ matrix.app }}:latest

      - name: Setup kubectl
        run: |
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > kubeconfig
          export KUBECONFIG=$PWD/kubeconfig
          kubectl get nodes

      - name: Deploy/update to EKS
        run: |
          export KUBECONFIG=$PWD/kubeconfig
          # Update image if deployment exists, otherwise apply manifest
          if kubectl get deployment ${{ matrix.app }} &> /dev/null; then
            echo "Updating image for deployment ${{ matrix.app }}"
            kubectl set image deployment/${{ matrix.app }} \
              ${{ matrix.app }}=${{ secrets.ECR_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ matrix.app }}:latest
          else
            echo "Deployment ${{ matrix.app }} does not exist, applying manifest"
            kubectl apply -f k8s/${{ matrix.app }}-deployment.yaml
          fi
